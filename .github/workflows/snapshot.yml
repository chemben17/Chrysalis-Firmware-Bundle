name: Snapshot build & publish

on:
  push:
    branches:
      - master
    tags-ignore:
      - v*

env:
  LC_ALL: C
  ARDUINO_DIRECTORIES_USER: ${{ github.workspace }}/.arduino/user
  KALEIDOSCOPE_DIR: ${{ github.workspace }}/.kaleidoscope
  HARDWARE_DIR: ${{ github.workspace }}/.arduino/user/hardware/keyboardio
jobs:
  metadata:
    runs-on: ubuntu-latest
    env:
      COMMIT_SHA: ${{ github.sha }}
      EXTRA_VERSION: .${{ github.run_number }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache arduino dep downloads
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace}}/.arduino/downloads
          key: ${{ runner.os }}-arduino-downloads
      - run: tools/bootstrap
      - name: Collect the commit SHAs of the build
        run: tools/collect-build-info
      - name: Add the NEWS as a changelog to the artifacts
        run: cp NEWS.md output/firmware-changelog.md
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: firmwares
          path: |
            output/

  build:
    runs-on: ubuntu-latest
    env:
      EXTRA_VERSION: .${{ github.run_number }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache arduino dep downloads
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace}}/.arduino/downloads
          key: ${{ runner.os }}-arduino-downloads
      - run: git clone https://github.com/keyboardio/Kaleidoscope.git ${KALEIDOSCOPE_DIR}
      - run: (cd ${KALEIDOSCOPE_DIR} && make setup)
      - run: git submodule update --init --recursive
      - run: make all KALEIDOSCOPE_TEMP_PATH=${{ github.workspace}}/.kaleidoscope-temp
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: firmwares
          path: |
            output/

  publish:
    needs: [ metadata, build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Delete the snapshot release
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        shell: bash
        run: |
          gh release delete -y v$(make version) || true
          git tag -d v$(make version) || true

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Recreate the snapshot release
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: |
          gh release create -p \
             -t "Chrysalis Firmware Bundle development snapshot" \
             -F artifacts/firmwares/release-notes.md \
             v$(make version)

      - name: Package up the artifacts
        shell: bash
        run: tar -C artifacts/firmwares -cvf firmware-files.tar .

      - name: Upload the firmware files & build info to the snapshot
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        run: |
          gh release upload v$(make version) \
             firmware-files.tar artifacts/firmwares/build-info.yml
